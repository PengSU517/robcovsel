[{"path":"/articles/boston.html","id":"data-description-and-variable-selection","dir":"Articles","previous_headings":"","what":"Data description and variable selection","title":"Boston Housing","text":"illustrate effect cellwise outlier propagation previously considered estimators using Boston Housing dataset. data available UCI maching learning repository (https://archive.ics.uci.edu/ml/index.php) collected \\(506\\) census samples \\(14\\) different variables. original objective study analyze association median housing values () Boston residents willingness pay clean air, well association variables dataset. consider \\(9\\) quantitative variables extensively studied. sparse regression model fitted , \\[     \\log(medv) =  \\ \\beta_0 + \\beta_1 \\log(lstat) + \\beta_2 rm + \\beta_3 \\log(dis) + \\beta_4 tax \\\\  + \\beta_5 ptratio  + \\beta_6 nox+ \\beta_7 age + \\beta_8 black + \\beta_9 \\log(crim) + \\varepsilon,\\\\ \\] compare performance five methods: Lasso (Tibshirani, 1996), ALasso (Zou,2006), sLTS (Alfons et al., 2013), sShootingS (Bottmer et al., 2021) well new proposed methods ALRPm LRP, ALGR LGR. measure performance variable selection adding known redundant variables, generate \\(10\\) additional random variables redundant predictors using setting previous simulation section. Therefore, now 19 predictors choose . test performance cellwise contamination, standardize 19 predictors robust estimators location (use median) scale (use \\(Q_n\\)). , predictor, \\(10\\%\\) cells replaced cellwise outliers randomly generated \\(0.5 N(10, 1)+ 0.5N(-10, 1)\\). comparison, also run simulations without contamination {investigate stable various methods known outliers present data}. repeat process adding ten redundant variables followed generating 10% outliers 19 explanatory variables 1,000 times, compute selection rates variable","code":""},{"path":"/articles/boston.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"Boston Housing","text":"","code":"library(MASS) # the Boston dataset library(robcovsel) library(doParallel) #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel library(tidyverse) #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── #> ✓ ggplot2 3.3.5     ✓ purrr   0.3.4 #> ✓ tibble  3.1.6     ✓ dplyr   1.0.8 #> ✓ tidyr   1.2.0     ✓ stringr 1.4.0 #> ✓ readr   2.1.2     ✓ forcats 0.5.1 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> x purrr::accumulate() masks foreach::accumulate() #> x dplyr::filter()     masks stats::filter() #> x dplyr::lag()        masks stats::lag() #> x dplyr::select()     masks MASS::select() #> x purrr::when()       masks foreach::when() library(corrplot) #> corrplot 0.92 loaded   data(\"Boston\") y = log(Boston$medv) Boston = Boston %>% mutate(loglstat = log(lstat), logdis = log(dis), logcrim = log(crim)) predictors = Boston[, c(\"loglstat\", \"rm\", \"logdis\", \"tax\", \"ptratio\",\"nox\", \"age\", \"black\", \"logcrim\")]   corrs = cor(predictors) rownames(corrs) = colnames(corrs) = c(\"log(lstat)\", \"rm\", \"log(dis)\", \"tax\", \"ptratio\",\"nox\", \"age\", \"black\", \"log(crim)\") corrsplot = corrplot(corrs, method = \"shade\", tl.col =\"black\",shade.col = NA, tl.srt = 45, order = \"FPC\") {   ##load(\"result_simu_boston.RData\")   data(result_simu_boston)   Boston_result = as.data.frame(as.matrix(result))   Boston_result$method = c(\"lasso\", \"alasso\", \"sLTS\", \"sShootingS\", \"LGR\", \"LRP\", \"ALGR\", \"ALRP\")   #save(Boston_result, file = \"Boston_result.Rdata\")   Boston_result$method = factor(Boston_result$method, levels = c(\"ALRP\", \"LRP\", \"ALGR\", \"LGR\", \"lasso\", \"alasso\", \"sLTS\", \"sShootingS\"))   table = aggregate(.~e + method, data = Boston_result, function(x)mean(as.logical(x)))   tbl = cbind(table[,(1:11)],redundant = rowMeans(table[,-(1:11)]));   colnames(tbl)[3:11] = c(\"log(lstat)\", \"rm\", \"log(dis)\", \"tax\", \"ptratio\",\"nox\", \"age\", \"black\", \"log(crim)\")    }  tbl[,c(\"method\",\"e\",  rownames(corrsplot$corr), \"redundant\")] #>        method   e log(dis) black   rm ptratio log(lstat)  age  tax  nox #> 1        ALRP 0.0     1.00  0.00 1.00    1.00          1 0.00 0.00 1.00 #> 2        ALRP 0.1     1.00  0.00 1.00    1.00          1 0.00 0.00 1.00 #> 3         LRP 0.0     1.00  1.00 1.00    1.00          1 1.00 0.00 1.00 #> 4         LRP 0.1     1.00  0.64 1.00    1.00          1 0.28 0.00 1.00 #> 5        ALGR 0.0     1.00  0.00 1.00    1.00          1 1.00 1.00 1.00 #> 6        ALGR 0.1     1.00  0.63 1.00    0.99          1 0.54 0.04 1.00 #> 7         LGR 0.0     1.00  0.00 1.00    1.00          1 0.50 0.99 1.00 #> 8         LGR 0.1     1.00  0.91 1.00    1.00          1 0.94 0.18 1.00 #> 9       lasso 0.0     1.00  0.03 1.00    1.00          1 0.64 0.78 1.00 #> 10      lasso 0.1     1.00  0.77 0.99    1.00          1 0.80 0.51 0.91 #> 11     alasso 0.0     1.00  0.00 1.00    1.00          1 1.00 1.00 1.00 #> 12     alasso 0.1     0.99  0.55 0.98    1.00          1 0.60 0.17 0.80 #> 13       sLTS 0.0     1.00  1.00 1.00    1.00          1 0.00 0.00 1.00 #> 14       sLTS 0.1     0.67  0.44 0.96    0.84          1 0.29 0.26 0.86 #> 15 sShootingS 0.0     0.00  0.00 1.00    0.00          1 0.00 0.00 0.00 #> 16 sShootingS 0.1     0.01  0.00 0.99    0.00          1 0.00 0.00 0.00 #>    log(crim)  redundant #> 1       0.76 0.08000000 #> 2       0.03 0.07909091 #> 3       0.99 0.13363636 #> 4       0.09 0.10636364 #> 5       0.00 0.05636364 #> 6       0.16 0.07272727 #> 7       0.00 0.13909091 #> 8       0.37 0.12000000 #> 9       1.00 0.12363636 #> 10      1.00 0.16727273 #> 11      1.00 0.05454545 #> 12      1.00 0.09181818 #> 13      1.00 0.01363636 #> 14      1.00 0.25090909 #> 15      0.00 0.00000000 #> 16      0.00 0.00000000  #write_csv(tbl[,c(\"method\",\"e\",  rownames(corrsplot$corr), \"redundant\")], \"Boston_table.csv\")"},{"path":"/articles/boston.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Boston Housing","text":"[1] Alfons, ., Croux, C., Gelper, S. (2013). Sparse least trimmed squares regression analyzing high-dimensional large data sets. Annals Applied Statistics, 7(1):226–248 [2] Bottmer, L., Croux, C., Wilms, . (2021). Sparse regression large data sets outliers. European Journal Operational Research, Press. [3] Tibshirani, R. (1996). Regression shrinkage selection via Lasso. Journal Royal Statistical Society: Series B (Methodological), 58(1):267–288 [4] Zou, H. (2006). Adaptive Lasso Oracle Properties. Journal American Statistical Association, 101(476):1418–1429.","code":""},{"path":"/articles/breastcancer.html","id":"data-description","dir":"Articles","previous_headings":"","what":"Data description","title":"Breast Cancer","text":"illustrate real data application high dimensional settings, use Breast Cancer dataset (van’t Veer. et.al 2002) example. 24,481 genes 117 breast tumor patients dataset. 78 breast cancer patients disease-free survival time, {genes } \\(\\log_{10}(Intensity)\\) given. construct regression model select important genes whose \\(\\log_{10}(Intensity)\\) significantly related disease-free patient survival. sake , regard disease-free survival time response use \\(\\log_{10}(Intensity)\\)’s predictors. assumed genes associated disease-free survival time. high dimensional datasets, usually screen variables first run variable selection based predictors screened. Thus first compute robust marginal correlations (using pairwise estimator (Gnanadesikan Kettenring, 1972) \\(Q_n\\) scale estimator (Rousseeuw Croux, 1993) gene expressions disease-free survival time select 100 genes largest robust pairwise correlation coefficients predictors.","code":"y = breastcancer_screened$dat.surtime x = breastcancer_screened[,1:100+2] #corrs = covf(as.matrix(x), scale.method = \"qn\", cor.method = \"pair\", pda.method = F)$cormatrix #rownames(corrs) = colnames(corrs) = NULL #corrplot(corrs, method = \"shade\",shade.col = NA, tl.col =\"black\", tl.pos = \"n\", order = \"FPC\")"},{"path":"/articles/breastcancer.html","id":"outlier-detection","dir":"Articles","previous_headings":"","what":"Outlier detection","title":"Breast Cancer","text":"Outlier detection results predictors based DDC citep{rousseeuw_detecting_2018} shown Figure ref{breastcancer}. cells yellow, showing detected outliers. Cells flagged outlying (red blue cells) observed value predicted value differ much. red cell means observed value larger predicted value blue cell means observed value smaller predicted value significantly.","code":"fit1 <- DDC(x) #>   #>  The input data has 78 rows and 100 columns. cellMap(fit1$remX, fit1$stdResid, columnlabels = c(1,rep(\" \",98),100), rowlabels = c(1,rep(\" \",76),78), columnangle = 0,         rowtitle = \"Observations\", columntitle = \"Genes\", sizetitles = 2,adjustrowlabels = 0.5, adjustcolumnlabels = 0.5)+    theme(axis.text.x = element_text(size = 12),         axis.text.y = element_text(size = 12),         axis.title.x = element_text(size = 14),         axis.title.y = element_text(size = 14),         legend.title = element_text(size=14), #change legend title font size         legend.text = element_text(size=12)) #ggsave(\"breastcancer.eps\",width = 8,height = 6) length(fit1$indcells)/7800 #> [1] 0.04987179"},{"path":"/articles/breastcancer.html","id":"variable-selection","dir":"Articles","previous_headings":"","what":"Variable selection","title":"Breast Cancer","text":"Given high cellwise contamination, traditional variable selection methods Lasso, rowwise robust variable selection methods may lead misleading selection results. consideration, cellwise robust methods may better solutions. sparse regression model fitted via Lasso, sLTS, sShootingS, ALRP ALGR, seperately. selected genes sorted based robust pairwise correlations survival time.","code":"x = as.matrix(x[,sort(names(x))]) lassofit = covlasso(x,y,cor.method = \"pearson\", scale.method = \"sd\", adaptive = F) alassofit = covlasso(x,y,cor.method = \"pearson\", scale.method = \"sd\", adaptive = T) sLTSfit = sparseLTS(x,y) sssfit = sparseshooting(as.matrix(x),y) lrpfit = covlasso(x,y,cor.method = \"pair\", scale.method = \"qn\",adaptive = F) alrpfit = covlasso(x,y,cor.method = \"pair\", scale.method = \"qn\",adaptive = T) lgrfit = covlasso(x,y,cor.method = \"gaussrank\", scale.method = \"qn\", adaptive = F) algrfit = covlasso(x,y,cor.method = \"gaussrank\", scale.method = \"qn\", adaptive = T) x = as.data.frame(x) rst = t(plyr::rbind.fill(list(   alrp = data.frame(t(sort(names(x)[as.logical(alrpfit$betahat_opt)]))),   lrp  = data.frame(t(sort(names(x)[as.logical( lrpfit$betahat_opt)]))),   algr = data.frame(t(sort(names(x)[as.logical(algrfit$betahat_opt)]))),   lgr  = data.frame(t(sort(names(x)[as.logical( lgrfit$betahat_opt)]))),   alasso = data.frame(t(sort(names(x)[as.logical(alassofit$betahat_opt)]))),   lasso  = data.frame(t(sort(names(x)[as.logical( lassofit$betahat_opt)]))),   slts = data.frame(t(sort(names(x)[as.logical(sLTSfit$coefficients[-1])]))),   sss = data.frame(t(sort(names(x)[as.logical(sssfit$coef[-1])])))       )))  colnames(rst) = c(\"ALRP\", \"LRP\", \"ALGR\", \"LGR\", \"ALasso\",\"Lasso\", \"sLTS\", \"sShootingS\")  rst_tbl = as.data.frame(t(matrix(rst, nrow = 6)))  rst_tbl #>                V1             V2             V3             V4             V5 #> 1        AL162078 Contig37028_RC Contig40406_RC    Contig62306 Contig64630_RC #> 2       NM_001616      NM_001830      NM_002824      NM_003125      NM_003860 #> 3       NM_013437           <NA>           <NA>           <NA>           <NA> #> 4            <NA>           <NA>           <NA>           <NA>           <NA> #> 5            <NA>           <NA>           <NA>           <NA>           <NA> #> 6            <NA>           <NA>           <NA>           <NA>           <NA> #> 7            <NA>           <NA>           <NA>           <NA>           <NA> #> 8            <NA>           <NA>           <NA>           <NA>           <NA> #> 9            <NA>           <NA>           <NA>           <NA>           <NA> #> 10           <NA>           <NA>           <NA>           <NA>           <NA> #> 11           <NA>           <NA>           <NA>           <NA>           <NA> #> 12           <NA>           <NA>           <NA>           <NA>           <NA> #> 13       AL162078 Contig35537_RC Contig37028_RC Contig38966_RC Contig40406_RC #> 14 Contig48328_RC Contig57357_RC    Contig62306 Contig64630_RC         M94046 #> 15      NM_001616      NM_001830      NM_002442      NM_002824      NM_003125 #> 16      NM_004052      NM_004618      NM_005785      NM_013437      NM_014706 #> 17           <NA>           <NA>           <NA>           <NA>           <NA> #> 18           <NA>           <NA>           <NA>           <NA>           <NA> #> 19           <NA>           <NA>           <NA>           <NA>           <NA> #> 20           <NA>           <NA>           <NA>           <NA>           <NA> #> 21           <NA>           <NA>           <NA>           <NA>           <NA> #> 22           <NA>           <NA>           <NA>           <NA>           <NA> #> 23           <NA>           <NA>           <NA>           <NA>           <NA> #> 24           <NA>           <NA>           <NA>           <NA>       AL162078 #> 25 Contig48328_RC Contig54956_RC Contig55181_RC         M94046      NM_001616 #> 26           <NA>           <NA>           <NA>           <NA>           <NA> #> 27           <NA>           <NA>           <NA>           <NA>           <NA> #> 28           <NA>           <NA>           <NA>           <NA>           <NA> #> 29           <NA>           <NA>           <NA>           <NA>           <NA> #> 30           <NA>           <NA>           <NA>           <NA>           <NA> #> 31           <NA>           <NA>           <NA>           <NA>           <NA> #> 32           <NA>           <NA>           <NA>           <NA>           <NA> #> 33           <NA>           <NA>           <NA>           <NA>           <NA> #> 34           <NA>           <NA>           <NA>           <NA>           <NA> #> 35           <NA>           <NA>           <NA>           <NA>           <NA> #> 36           <NA>           <NA>           <NA>       AL162078 Contig19451_RC #> 37 Contig48328_RC Contig54893_RC Contig54956_RC Contig55181_RC Contig57357_RC #> 38      NM_001616      NM_005785      NM_005881      NM_006301           <NA> #> 39           <NA>           <NA>           <NA>           <NA>           <NA> #> 40           <NA>           <NA>           <NA>           <NA>           <NA> #> 41           <NA>           <NA>           <NA>           <NA>           <NA> #> 42           <NA>           <NA>           <NA>           <NA>           <NA> #> 43           <NA>           <NA>           <NA>           <NA>           <NA> #> 44           <NA>           <NA>           <NA>           <NA>           <NA> #> 45           <NA>           <NA>           <NA>           <NA>           <NA> #> 46           <NA>           <NA>           <NA>           <NA>           <NA> #> 47           <NA>           <NA>           <NA>           <NA>           <NA> #> 48           <NA>           <NA>       AB029009       AL162078 Contig36859_RC #> 49         M94046      NM_006301           <NA>           <NA>           <NA> #> 50           <NA>           <NA>           <NA>           <NA>           <NA> #> 51           <NA>           <NA>           <NA>           <NA>           <NA> #> 52           <NA>           <NA>           <NA>           <NA>           <NA> #> 53           <NA>           <NA>           <NA>           <NA>           <NA> #> 54           <NA>           <NA>           <NA>           <NA>           <NA> #> 55           <NA>           <NA>           <NA>           <NA>           <NA> #> 56           <NA>           <NA>           <NA>           <NA>           <NA> #> 57           <NA>           <NA>           <NA>           <NA>           <NA> #> 58           <NA>           <NA>           <NA>           <NA>           <NA> #> 59           <NA>           <NA>           <NA>           <NA>           <NA> #> 60           <NA>       AL162078 Contig37063_RC Contig42740_RC Contig48328_RC #> 61 Contig55181_RC Contig57357_RC         M94046      NM_001673      NM_005881 #> 62      NM_016390           <NA>           <NA>           <NA>           <NA> #> 63           <NA>           <NA>           <NA>           <NA>           <NA> #> 64           <NA>           <NA>           <NA>           <NA>           <NA> #> 65           <NA>           <NA>           <NA>           <NA>           <NA> #> 66           <NA>           <NA>           <NA>           <NA>           <NA> #> 67           <NA>           <NA>           <NA>           <NA>           <NA> #> 68           <NA>           <NA>           <NA>           <NA>           <NA> #> 69           <NA>           <NA>           <NA>           <NA>           <NA> #> 70           <NA>           <NA>           <NA>           <NA>           <NA> #> 71           <NA>           <NA>           <NA>           <NA>           <NA> #> 72 Contig35537_RC Contig40406_RC Contig40772_RC Contig42740_RC Contig48328_RC #> 73 Contig57357_RC    Contig62306 Contig64630_RC  Contig8862_RC         M94046 #> 74      NM_001616      NM_001720      NM_002312      NM_004052      NM_004618 #> 75      NM_013262      NM_016434           <NA>           <NA>           <NA> #> 76           <NA>           <NA>           <NA>           <NA>           <NA> #> 77           <NA>           <NA>           <NA>           <NA>           <NA> #> 78           <NA>           <NA>           <NA>           <NA>           <NA> #> 79           <NA>           <NA>           <NA>           <NA>           <NA> #> 80           <NA>           <NA>           <NA>           <NA>           <NA> #> 81           <NA>           <NA>           <NA>           <NA>           <NA> #> 82           <NA>           <NA>           <NA>           <NA>           <NA> #> 83           <NA>           <NA>           <NA>           <NA>           <NA> #> 84       AB029009       AB040942       AB040971       AF070605       AF155652 #> 85       AK001044       AL110193       AL137362       AL137527       AL162078 #> 86 Contig14797_RC Contig19451_RC Contig29141_RC Contig30146_RC Contig31312_RC #> 87 Contig37028_RC Contig37063_RC Contig40406_RC Contig41521_RC Contig42740_RC #> 88 Contig48328_RC Contig48472_RC Contig50846_RC Contig52620_RC Contig54893_RC #> 89 Contig55181_RC    Contig56229 Contig57357_RC Contig57521_RC   Contig726_RC #> 90      NM_000915      NM_001616      NM_001643      NM_001720      NM_001826 #> 91      NM_001861      NM_001905      NM_002442      NM_002824      NM_003125 #> 92      NM_003860      NM_003862      NM_003992      NM_004824      NM_004911 #> 93      NM_005881      NM_006301      NM_006305      NM_006752      NM_012261 #> 94      NM_014347      NM_014519      NM_014675      NM_014894      NM_014908 #> 95      NM_016083      NM_016390      NM_016434      NM_020974       AL162078 #>                V6 #> 1       NM_000907 #> 2       NM_004618 #> 3            <NA> #> 4            <NA> #> 5            <NA> #> 6            <NA> #> 7            <NA> #> 8            <NA> #> 9            <NA> #> 10           <NA> #> 11           <NA> #> 12       AJ236885 #> 13 Contig45347_RC #> 14      NM_000907 #> 15      NM_003860 #> 16      NM_016083 #> 17           <NA> #> 18           <NA> #> 19           <NA> #> 20           <NA> #> 21           <NA> #> 22           <NA> #> 23           <NA> #> 24 Contig22786_RC #> 25      NM_006301 #> 26           <NA> #> 27           <NA> #> 28           <NA> #> 29           <NA> #> 30           <NA> #> 31           <NA> #> 32           <NA> #> 33           <NA> #> 34           <NA> #> 35           <NA> #> 36 Contig45347_RC #> 37         M94046 #> 38           <NA> #> 39           <NA> #> 40           <NA> #> 41           <NA> #> 42           <NA> #> 43           <NA> #> 44           <NA> #> 45           <NA> #> 46           <NA> #> 47           <NA> #> 48 Contig48328_RC #> 49           <NA> #> 50           <NA> #> 51           <NA> #> 52           <NA> #> 53           <NA> #> 54           <NA> #> 55           <NA> #> 56           <NA> #> 57           <NA> #> 58           <NA> #> 59           <NA> #> 60 Contig54956_RC #> 61      NM_006301 #> 62           <NA> #> 63           <NA> #> 64           <NA> #> 65           <NA> #> 66           <NA> #> 67           <NA> #> 68           <NA> #> 69           <NA> #> 70           <NA> #> 71           <NA> #> 72 Contig54893_RC #> 73      NM_000907 #> 74      NM_005881 #> 75           <NA> #> 76           <NA> #> 77           <NA> #> 78           <NA> #> 79           <NA> #> 80           <NA> #> 81           <NA> #> 82           <NA> #> 83       AB002369 #> 84       AJ236885 #> 85     Contig1408 #> 86 Contig31424_RC #> 87 Contig47222_RC #> 88 Contig54956_RC #> 89         M94046 #> 90      NM_001830 #> 91      NM_003245 #> 92      NM_005785 #> 93      NM_013437 #> 94      NM_015270 #> 95 Contig37028_RC  # write_csv(rst_tbl,\"breastcancer_result.csv\")"},{"path":"/articles/breastcancer.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Breast Cancer","text":"[1] Bai, Y., Tian, M., Tang, M.-L., Lee, W.-Y. (2021). Variable selection ultra-high di- mensional quantile regression missing data measurement error. Statistical Methods Medical Research, 30(1):129–150. [2] Bottmer, L., Croux, C., Wilms, . (2021). Sparse regression large data sets outliers. European Journal Operational Research, Press. [3] Boudt, K., Cornelissen, J., Croux, C. (2012). Gaussian rank correlation estimator: robustness properties. Statistics Computing, 22(2):471–483. [4] Gnanadesikan, R. Kettenring, J. R. (1972). Robust estimates, residuals, outlier detection multiresponse data. Biometrics, 28:81–124. [5] Huang, C., Farewell, D., Pan, J. (2017). calibration method non-positive definite covariance matrix multivariate data analysis. Journal Multivariate Analysis, 157:45–52. [6] Ollerer, V., Alfons, ., Croux, C. (2016). shooting S-estimator robust regres- sion. Computational Statistics, 31(3):829–844. [7] Ollerer, V., Croux, C. (2015). Robust high-dimensional precision matrix estimation. Modern nonparametric, robust multivariate methods, (pp. 325-350). Springer, Cham. [8] van ’t Veer, L. J., Dai, H., van de Vijver, M. J., , Y. D., Hart, . . M., Mao, M., Peterse, H. L., van der Kooy, K., Marton, M. J., Witteveen, . T., Schreiber, G. J., Kerkhoven, R. M., Roberts, C., Linsley, P. S., Bernards, R., Friend, S. H. (2002). Gene expression profiling predicts clinical outcome breast cancer. Nature, 415(6871):530–536.","code":""},{"path":"/articles/demo.html","id":"data-generation","dir":"Articles","previous_headings":"","what":"Data generation","title":"demo","text":"","code":"gen = genevar(p = 10, e = 0.1) x = gen$x y = gen$y"},{"path":"/articles/demo.html","id":"test","dir":"Articles","previous_headings":"","what":"test","title":"demo","text":"","code":"system.time({fit1 = covlasso(x,y,cor.method = \"pair\",scale.method = \"qn\")})   #>    user  system elapsed  #>   0.052   0.006   0.058 system.time({fit2 = covlasso(x,y,cor.method = \"gaussrank\",scale.method = \"qn\")}) #>    user  system elapsed  #>   0.004   0.000   0.004 system.time({fit3 = sparseshooting(x,y) }) #>    user  system elapsed  #>   1.137   0.063   1.201  fit1$pda.method #> [1] \"nearpd\" fit1$adaptive #> [1] TRUE fit1$lmin #> [1] 0.3097093 head(fit1$betahat_opt) #> [1] 0.8071221 1.1096291 0.9699516 1.0794169 0.8048905 0.0000000 set.seed(500131) dataset1 = genevar(p = 200, e = 0.1, gamma = 0) fit12 = covlasso(dataset1$x,dataset1$y,cor.method = \"gaussrank\",scale.method = \"qn\")   fit = covf(cbind(dataset1$y,dataset1$x),cor.method = \"gaussrank\", scale.method = \"qn\", pda.method = \"nearpd\") Sigma = fit$cormatrix dim(Sigma) #> [1] 201 201 eigenrst = eigen(Sigma) Sigmasqrt = (eigenrst$vectors)%*%diag(sqrt(eigenrst$values))%*%t(eigenrst$vectors)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peng Su. Author, maintainer. Garth Tarr. Author. Samuel Muller. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Su P, Tarr G, Muller S (2022). robcovsel: Robust variable selection based covariance matrix. R package version 0.2.0.","code":"@Manual{,   title = {robcovsel: Robust variable selection based on covariance matrix},   author = {Peng Su and Garth Tarr and Samuel Muller},   year = {2022},   note = {R package version 0.2.0}, }"},{"path":"/index.html","id":"robcovsel","dir":"","previous_headings":"","what":"Robust variable selection based on covariance matrix","title":"Robust variable selection based on covariance matrix","text":"package provides functions compute ALRP (adaptive lasso based robust pariwise correlations) ALGR (adaptive lasso based Gaussrank correlations) proposed Peng Su, Samuel Muller Garth Tarr. manuscript found (https://arxiv.org/abs/2110.12406). added demonstration (demo), simulation workflow (simu) two real data applications (boston breastcancer) vignettes get started, can install package using: may also consider installing shootings package. functions package taken https://github.com/ineswilms/sparse-shooting-S compiled basic package make convenient use:","code":"remotes::install_github(\"PengSU517/robcovsel\") remotes::install_github(\"PengSU517/shootings\")"},{"path":"/reference/covf.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation estimators — covf","title":"Correlation estimators — covf","text":"Correlation estimators","code":""},{"path":"/reference/covf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation estimators — covf","text":"","code":"covf(x, cor.method, scale.method, pda.method, lmin = NULL)"},{"path":"/reference/covf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation estimators — covf","text":"x input matrix cor.method \"sd\"  \"qn\" scale.method \"pearson\", \"pair\" \"gaussrank\" pda.method \"nearpd\" FALSE lmin min threshold eigenvalues","code":""},{"path":"/reference/covf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation estimators — covf","text":"covmatrix, estimated covariance matrix cormatrix, estimated correlation matrix scale, estimated scale vector lmin, min threshold eigenvalues","code":""},{"path":"/reference/covf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation estimators — covf","text":"","code":"x = matrix(rnorm(100), ncol = 10) paircorf(x) #> Error in paircorf(x): could not find function \"paircorf\""},{"path":"/reference/covlasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust adaptive lasso based on robust correlation estimates — covlasso","title":"Robust adaptive lasso based on robust correlation estimates — covlasso","text":"Robust adaptive lasso based robust correlation estimates","code":""},{"path":"/reference/covlasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust adaptive lasso based on robust correlation estimates — covlasso","text":"","code":"covlasso(   x,   y,   cor.method = \"pair\",   scale.method = \"qn\",   pda.method = NULL,   lmin = NULL,   std = T,   adaptive = T,   cormatrix = NULL,   scale = NULL )"},{"path":"/reference/covlasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust adaptive lasso based on robust correlation estimates — covlasso","text":"x input design matrix y input response vector cor.method \"sd\" \"qn\" scale.method \"pearson\", \"pair\" \"gaussrank\" pda.method \"nearpd\" FALSE lmin min threshold eigenvalues std TRUE robust correlation matrix used, FALSE robust covariance matrix used. adaptive adaptive regularization penalties cormatrix also use correlation matrix input scale put scales use cormatrix","code":""},{"path":"/reference/covlasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust adaptive lasso based on robust correlation estimates — covlasso","text":"betahat_opt, optimal estimation beta obtained algorithm lambda_opt optimal tuning parameter sigma_opt optimal estimation sigma. output also includes estimated correlation matrix, estimated covariance matrix et cetera covf function.","code":""},{"path":"/reference/covlasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robust adaptive lasso based on robust correlation estimates — covlasso","text":"","code":"dat = genevar() y = dat$y x = dat$x fit = covlasso(x,y) fit$betahat_opt #>  [1] 0.9553109 1.0802212 1.0488456 1.3731921 0.7194261 0.0000000 0.0000000 #>  [8] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 #> [15] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000"},{"path":"/reference/genevar.html","id":null,"dir":"Reference","previous_headings":"","what":"generating predictors and response randomly using default settings — genevar","title":"generating predictors and response randomly using default settings — genevar","text":"generating predictors response randomly using default settings","code":""},{"path":"/reference/genevar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generating predictors and response randomly using default settings — genevar","text":"","code":"genevar(   n = 100,   p = 20,   e = 0.05,   r = 0.5,   beta = c(1, 2, 1, 2, 1, rep(0, p - 5)),   gamma = 10 )"},{"path":"/reference/genevar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generating predictors and response randomly using default settings — genevar","text":"n sample size p dimension e contamination rate r correlation coefficent beta regression coefficients gamma magnitude outliers","code":""},{"path":"/reference/genevar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generating predictors and response randomly using default settings — genevar","text":"x, generated design matrix y, generated response vector beta, regression coefficients use","code":""},{"path":"/reference/genevar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generating predictors and response randomly using default settings — genevar","text":"","code":"dat = genevar() x = dat$x y = dat$y"},{"path":"/reference/lminsel.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection of the eigen value threshold — lminsel","title":"Selection of the eigen value threshold — lminsel","text":"Selection eigen value threshold","code":""},{"path":"/reference/lminsel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection of the eigen value threshold — lminsel","text":"","code":"lminsel(cormatrix)"},{"path":"/reference/lminsel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection of the eigen value threshold — lminsel","text":"cormatrix input cormatrix","code":""},{"path":"/reference/lminsel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection of the eigen value threshold — lminsel","text":"lmin, min threshold eigenvalues","code":""},{"path":"/reference/nearpdf.html","id":null,"dir":"Reference","previous_headings":"","what":"PD calibration — nearpdf","title":"PD calibration — nearpdf","text":"PD calibration","code":""},{"path":"/reference/nearpdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PD calibration — nearpdf","text":"","code":"nearpdf(cormatrix, pda.method, lmin)"},{"path":"/reference/nearpdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PD calibration — nearpdf","text":"cormatrix input cormatrix pda.method \"nearpd\" FALSE lmin min threshold eigenvalues","code":""},{"path":"/reference/nearpdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PD calibration — nearpdf","text":"cormatrix.pd, positive-definite adjusted correlation matrix lmin, min threshold eigenvalues","code":""},{"path":"/reference/nearpdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PD calibration — nearpdf","text":"","code":"x = matrix(rnorm(100), ncol = 10) nearpdf(cor(x), pda.method = \"nearpd\", lmin = 0.1) #> $cormatrix.pd #>               [,1]        [,2]        [,3]       [,4]        [,5]        [,6] #>  [1,]  1.016438499 -0.24336630 -0.29854438  0.1684478 -0.20172127 -0.56286214 #>  [2,] -0.243366296  1.00258563 -0.19448860  0.2646634  0.14891776  0.07145766 #>  [3,] -0.298544376 -0.19448860  1.02388630  0.4178664 -0.25020612 -0.02250468 #>  [4,]  0.168447812  0.26466339  0.41786638  1.0213915 -0.20792064 -0.39565409 #>  [5,] -0.201721274  0.14891776 -0.25020612 -0.2079206  1.00083657  0.45645093 #>  [6,] -0.562862142  0.07145766 -0.02250468 -0.3956541  0.45645093  1.00145458 #>  [7,] -0.094986920 -0.20550561 -0.04474343 -0.1772085  0.10003589  0.38908485 #>  [8,] -0.002374586  0.04034343  0.33983276  0.6234173 -0.17961695 -0.24517935 #>  [9,] -0.105431453  0.33908758 -0.53955955 -0.2366977 -0.07237147  0.07405219 #> [10,] -0.032621022  0.13223027  0.50376770  0.3643663 -0.66614071 -0.26772870 #>              [,7]         [,8]        [,9]       [,10] #>  [1,] -0.09498692 -0.002374586 -0.10543145 -0.03262102 #>  [2,] -0.20550561  0.040343429  0.33908758  0.13223027 #>  [3,] -0.04474343  0.339832763 -0.53955955  0.50376770 #>  [4,] -0.17720853  0.623417323 -0.23669766  0.36436635 #>  [5,]  0.10003589 -0.179616952 -0.07237147 -0.66614071 #>  [6,]  0.38908485 -0.245179345  0.07405219 -0.26772870 #>  [7,]  1.00164021  0.325357991 -0.25173237 -0.17501464 #>  [8,]  0.32535799  1.018920540 -0.49922216  0.24120388 #>  [9,] -0.25173237 -0.499222159  1.01196612 -0.10212082 #> [10,] -0.17501464  0.241203883 -0.10212082  1.00088004 #>  #> $lmin #> [1] 0.1 #>"},{"path":"/reference/paircorxyf.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise correlation between x and y — paircorxyf","title":"Pairwise correlation between x and y — paircorxyf","text":"Pairwise correlation x y","code":""},{"path":"/reference/paircorxyf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise correlation between x and y — paircorxyf","text":"","code":"paircorxyf(x, y)"},{"path":"/reference/paircorxyf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise correlation between x and y — paircorxyf","text":"x input vector y input vector","code":""},{"path":"/reference/paircorxyf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise correlation between x and y — paircorxyf","text":"cor, pairwise correlations x y","code":""},{"path":"/reference/paircorxyf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise correlation between x and y — paircorxyf","text":"","code":"x = rnorm(100) y = rnorm(100) paircorxyf(x,y) #> [1] 0.1565963"}]
