% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roblasso.R
\name{covlasso}
\alias{covlasso}
\title{Robust adaptive lasso}
\usage{
covlasso(
  x,
  y,
  cor.method = c("pearson", "pair", "gaussrank"),
  scale.method = c("norm", "qn"),
  pda.method = "nearpd",
  lmin = 0.1,
  std = TRUE,
  adaptive = FALSE
)
}
\arguments{
\item{x}{input design matrix}

\item{y}{input response vector}

\item{cor.method}{"norm" or "qn"}

\item{scale.method}{could be "pearson", "pair" and "gaussrank"}

\item{pda.method}{"nearpd" or FALSE}

\item{lmin}{min threshold of eigenvalues}

\item{std}{If TRUE the robust correlation matrix is used,
if FALSE the robust covariance matrix is used.}

\item{adaptive}{adaptive regularization penalties}
}
\value{

}
\description{
Robust adaptive lasso
}
\examples{
#Setting parameters
{
  n = 100 #sample size
  p = 10 #dimension size
  e = 0.05 #contamination rate
  r = 0.5 #correlation among predictors
  gamma = 4 #magnitude of outliers

  mu = rep(10,p) # mean vector of predictors

  # covariance matrix of the predictor vector
  sigma = diag(rep(5^2,p))
  for (i in 1:p) {for (j in 1:p) {
    if (i !=j)sigma[i,j] = sqrt(sigma[i,i]*sigma[j,j])*r^abs(i-j)}}


  beta = c(1,2,3,4,5,rep(0,p-5))# regression parameter vector
}


#Generating datasets
{
  xr = MASS::mvrnorm(n,mu,sigma)
  error = rnorm(n,0,1)
  y = 20+xr\%*\%beta + error
  bi = apply(matrix(0, nrow = n, ncol = p), 2,
             function(xvec) {xvec[sample(x = 1:n, size = e*n)] = 1; return(xvec)})

  outlier = matrix(0,nrow = n,ncol=p)
  for (i in 1:n) {
    k = sum(bi[i,])
    if(k!=0){
      label = as.logical(bi[i,])
      muc = mu[label]+sigma[label,!label]\%*\%solve(sigma[!label,!label])\%*\%(xr[i,!label]-mu[!label])
      sigmac = sigma[label,label]-sigma[label,!label]\%*\%solve(sigma[!label,!label])\%*\%sigma[!label,label]
      outlier[i,label] = muc-gamma*sign(xr[i,label])*diag(sigmac)
    }
  }
  x = xr*(1-bi)+outlier
  pairs(data.frame(y = y,x[,1:3]),pch = 19)

}

paircorf(x) #GK pairwise correlation
gaussrankf(x) #gaussrank correlation

fit = covlasso(x,y,cor.method = "gaussrank",scale.method = "norm", pda = "nearpd", lmin = 0.1, ada = T)
fit

}
